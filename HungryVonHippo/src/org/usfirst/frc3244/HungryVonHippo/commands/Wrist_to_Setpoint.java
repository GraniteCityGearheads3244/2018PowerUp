// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3244.HungryVonHippo.commands;

import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc3244.HungryVonHippo.Robot;

/**
 *
 */
public class Wrist_to_Setpoint extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
    private double m_setpoint;
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public Wrist_to_Setpoint(double setpoint) {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        m_setpoint = setpoint;

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.wrist);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    protected void initialize() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INITIALIZE
        Robot.wrist.enable();
        Robot.wrist.setSetpoint(m_setpoint);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INITIALIZE
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
   		if (m_setpoint == Robot.wrist.UP){
   			Robot.oi.launchPad.setOutput(7, true);
   	    	Robot.oi.launchPad.setOutput(8, false);
   	    	Robot.oi.launchPad.setOutput(9, false);
   		}else if(m_setpoint == Robot.wrist.PRESENT_GEAR_ON_PEG){
   			Robot.oi.launchPad.setOutput(7, false);
   	    	Robot.oi.launchPad.setOutput(8, true);
   	    	Robot.oi.launchPad.setOutput(9, false);  		
   		}else if(m_setpoint == Robot.wrist.DOWN){
   			Robot.oi.launchPad.setOutput(7, false);
   	    	Robot.oi.launchPad.setOutput(8, false);
   	    	Robot.oi.launchPad.setOutput(9, true);        		
       	}else{
   			Robot.oi.launchPad.setOutput(7, false);
   	    	Robot.oi.launchPad.setOutput(8, false);
   	    	Robot.oi.launchPad.setOutput(9, false);
       	}
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ISFINISHED
        return Robot.wrist.onTarget();

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ISFINISHED
    }

    // Called once after isFinished returns true
    protected void end() {
    	//If we end at set point then disable
    	Robot.wrist.disable();
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    	//if we where interrupted don't end/disable
    }
}
