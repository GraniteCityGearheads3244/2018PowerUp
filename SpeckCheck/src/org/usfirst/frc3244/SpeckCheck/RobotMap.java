// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3244.SpeckCheck;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.VictorSP;
import edu.wpi.first.wpilibj.drive.MecanumDrive;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController intakeIntakeLeft;
    public static SpeedController intakeIntakeRight;
    public static WPI_TalonSRX driveTrainRightFront;
    public static WPI_TalonSRX driveTrainLeftFront;
    public static WPI_TalonSRX driveTrainLeftRear;
    public static WPI_TalonSRX driveTrainRightrear;
    public static MecanumDrive driveTrainMecanumDrive1;
    public static WPI_TalonSRX scissorMotorLeft;
    public static WPI_TalonSRX scissorMotorRight;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        intakeIntakeLeft = new VictorSP(0);
        LiveWindow.addActuator("Intake", "IntakeLeft", (VictorSP) intakeIntakeLeft);
        intakeIntakeLeft.setInverted(false);
        intakeIntakeRight = new VictorSP(1);
        LiveWindow.addActuator("Intake", "IntakeRight", (VictorSP) intakeIntakeRight);
        intakeIntakeRight.setInverted(false);
        driveTrainRightFront = new WPI_TalonSRX(1);
        
        
        driveTrainLeftFront = new WPI_TalonSRX(2);
        
        
        driveTrainLeftRear = new WPI_TalonSRX(4);
        
        
        driveTrainRightrear = new WPI_TalonSRX(5);
        
        
        driveTrainMecanumDrive1 = new MecanumDrive(driveTrainLeftFront, driveTrainLeftRear,
              driveTrainRightFront, driveTrainRightrear);
        LiveWindow.addActuator("DriveTrain", "Mecanum Drive 1", driveTrainMecanumDrive1);
        driveTrainMecanumDrive1.setSafetyEnabled(true);
        driveTrainMecanumDrive1.setExpiration(0.1);
        driveTrainMecanumDrive1.setMaxOutput(1.0);

        scissorMotorLeft = new WPI_TalonSRX(3);
        
        
        scissorMotorRight = new WPI_TalonSRX(6);
        
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
